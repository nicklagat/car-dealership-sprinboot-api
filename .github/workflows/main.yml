name: Build, Test & Deploy Spring App

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployToUAT:
        description: 'Deploy to UAT (true/false)'
        required: true
        default: 'false'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Unit Tests
        run: ./gradlew test

      - name: Build the application
        run: ./gradlew clean assemble

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-app
          path: build/libs/*.jar

  cypress-tests:
    name: Cypress Tests
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Specify your Node.js version

      - name: Install Cypress dependencies
        run: npm install

      - name: Run Cypress tests (Headless)
        run: npx cypress run --headless
        # Additional Cypress command options can be added here

  deploy-to-qa:
    name: Deploy to QA Environment
    needs: cypress-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: spring-app

      - name: Deploy to QA
        run: echo "Deploying to QA environment"
        # Replace with actual deployment commands

  deploy-to-uat:
    name: Deploy to UAT Environment
    needs: cypress-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deployToUAT == 'true'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: spring-app

      - name: Deploy to UAT
        run: echo "Deploying to UAT environment"
        # Replace with actual deployment commands
